* B. Practice 3
** 1. Start ~Goloop~ local node
#+BEGIN_SRC bash
cd gochain-local
sudo ./run_gochain.sh start
export PATH=$PATH:/$HOME/goloop/bin
#+END_SRC

** 2. Build and optimize the jar
#+BEGIN_SRC bash
sudo ./gradlew build
sudo ./gradlew optimizedJar
#+END_SRC

** 3. Deploy the optimized jar
*** Input
#+BEGIN_SRC bash
goloop rpc sendtx deploy ./marketplace/build/libs/marketplace-0.1.0-optimized.jar \
    --uri http://127.0.0.1:9082/api/v3 \
    --key_store /$HOME/gochain-local/data/godWallet.json --key_password gochain \
    --nid 0x3 --step_limit 10000000000 \
    --content_type application/java
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x00a1f2f799f69eb24412cc0f19200afca96bd87db946e404686137fe8beb1feb"
#+END_SRC

** 4. Get transaction detail
*** Input
#+BEGIN_SRC bash
goloop rpc \
    --uri http://localhost:9082/api/v3 txresult 0x00a1f2f799f69eb24412cc0f19200afca96bd87db946e404686137fe8beb1feb
#+END_SRC

*** Result
{
  "to": "cx0000000000000000000000000000000000000000",
  "cumulativeStepUsed": "0x41854e53",
  "stepUsed": "0x41854e53",
  "stepPrice": "0x2e90edd00",
  "eventLogs": [],
  "logsBloom": "0x
  "status": "0x1",
  "scoreAddress": "cx0b960e6b829e17bcc6fe78cb339fa31d04779149",
  "blockHash": "0x948f6139c671d758cefbe57885fa4445cbb5684c9df39b136826e1814ca1ae52",
  "blockHeight": "0x15f3",
  "txIndex": "0x0",
  "txHash": "0x00a1f2f799f69eb24412cc0f19200afca96bd87db946e404686137fe8beb1feb"
}
#+END_SRC

** 5. Call to contract (method ~getVoteCount~)
*** Input
#+BEGIN_SRC bash
goloop rpc \
    --uri http://localhost:9082/api/v3 call \
    --to cx0b960e6b829e17bcc6fe78cb339fa31d04779149  \
    --method getVoteCount \
    --param proposal=For
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x0"
#+END_SRC

** 6. Send to contract (method ~Vote~)
*** Input
#+BEGIN_SRC bash
goloop rpc sendtx call \
    --to cx0b960e6b829e17bcc6fe78cb339fa31d04779149 \
    --uri http://127.0.0.1:9082/api/v3 \
    --key_store /$HOME/gochain-local/data/godWallet.json \
    --key_password gochain \
    --nid 0x3 --step_limit 10000000 \
    --method handleAdding \
    --param type=Collectionn \
    --param ipfs=aswdqe
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x5771fca557b29a532d65a1cec9665155a62f0765a9de8719f65335bec5478176"
#+END_SRC


** 4. Get transaction detail
*** Input
#+BEGIN_SRC bash
goloop rpc \
    --uri http://localhost:9082/api/v3 txresult 0x2c7c233954d551ab508dfd96afbe6acae47757fe32ed8aa8f0035a04910a74fc
#+END_SRC


** 7. Call to contract (method ~addresses~)
*** Input
#+BEGIN_SRC bash
goloop rpc sendtx call \
    --to cx0b960e6b829e17bcc6fe78cb339fa31d04779149 \
    --uri http://127.0.0.1:9082/api/v3 \
    --key_store /$HOME/gochain-local/data/godWallet.json \
    --key_password gochain \
    --nid 0x3 --step_limit 10000000 \
    --method handleSelling \
    --param ipfs=aswdqe \
    --param price=1200000
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x0"
#+END_SRC